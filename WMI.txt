　WMI(Windows　Manegement　Instrumentation)APIは、開発者とシステム管理者の間でニーズが高まっていた、Windowsオペレーティングシステムのコンポーネントを管理するための共通のスクリプティングAPIに対する要望に応えて、1998年に開発された。
WMIが開発されるまでは、オペレーティングシステムの何らかのコンポーネントを管理したい場合には、Registry APIやEvent Log APIといったコンポーネント固有のWin32 APIを使用するしかなかった。これらのAPIにはそれぞれ実装上の癖があり、単純なタスクを実行するだけでもかなりの作業を強いられた。Win32 APIの問題はそれだけではなかった。VBScriptなどのスクリプティング言語からそれらにアクセスできなかったのである。このため、経験不足のプログラマやシステム管理者がプログラムからシステムを管理しようとしても、思うようにはいかなかった。WMIは、イベントログ、レジストリ、システムプロセス、ファイルシステム、その他ほとんどのオペレーティングシステムコンポーネントの取得や管理に使用できる統一APIを提供することにより、こうした状況を一変させた。

　WMIのアーキテクチャは、プロバイダの概念に大きく依存している。これらのプロバイダが連携して、照会されたオブジェクトの情報を提供する。どのような情報を取得しようとしているかに応じて、WMIはその情報を取得できる特定のプロバイダ（SNMP、レジストリなど）に接続する。

　WMIは、Windows 2000 Professional、Windows 2000 Server、Windows XP、およびWindows Server 2003の一部としてインストールされる。Windows 98やWindows NT 4.0でWMIを使用する場合は、MSDNからWMIの最新バージョンをダウンロードしてインストールする。

　WMIスクリプトの開発は、スクリプティング言語を使用した経験があれば、それほど難しくない。
実際には、特定のクラスのオブジェクトを参照、列挙、取得する方法さえ理解すれば、コードをDNSといったマネージメントコンポーネントに対応させるのは簡単である。
また、ガイドラインをほんのいくつか理解するだけで、VBScriptコードをPerlコードに書き換えたり、PerlコードをVBScriptコードに書き換えたりできる。
